<?xml version="1.0" encoding="UTF-8"?>
<protocol name="org_kde_kwin_screen_management">
  <copyright><![CDATA[
    Copyright 2015 Sebastian KÃ¼gler <sebas@kde.org>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ]]></copyright>

  <interface name="org_kde_kwin_screen_management" version="1">
    <description summary="list connected, but disabled outputs">
    This interface allows to enlist connected outputs that are not used by the
    compositor. These outputs are currently disabled, so not rendered to.
    </description>

    <event name="disabledOutputAdded">
      <description summary="emitted when anutp output is connected">
        The output is connected, but not used for rendering yet. This means that
        this output has either just been plugged in, or disabled and excluded from
        the registry object.
      </description>
      <arg name="edid" type="string" summary="the outputs EDID string"/>
      <arg name="name" type="string" summary="output's name"/>
      <arg name="connector" type="string" summary="output's connector"/>
    </event>

    <event name="disabledOutputRemoved">
      <description summary="emitted when an output disappears from the list">
        The output is disconnected, or has been enabled.
      </description>
      <arg name="name" type="string" summary="output's name"/>
      <arg name="connector" type="string" summary="output's connector"/>
    </event>

    <event name="done">
        <description summary="emitted when the listing initiated by get_disabled_outputs is done">
            This event is fired once the listing of outputs triggered after binding
            the protocol is done, i.e. after all disabled outputs have been announced.
            In case there are no disabled outputs, this event is fired anyway.
        </description>
    </event>

</interface>
</protocol>
